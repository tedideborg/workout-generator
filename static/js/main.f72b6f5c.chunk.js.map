{"version":3,"sources":["components/workoutSelector.tsx","components/common/currentWorkout.tsx","components/common/workoutItem.tsx","components/workoutList.tsx","components/common/nextWorkout.tsx","components/workout.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["WorkoutSelector","props","className","value","time","onChange","onTimeChange","type","onTypeChange","name","id","intensity","onIntensityChange","to","href","title","CurrentWorkout","workout","svgPath","xmlns","viewBox","width","height","fill","d","toUpperCase","WorkoutItem","active","WorkoutList","state","currentTimer","calculateTimers","timers","currentTimers","intervalTimer","setInterval","calculateIntervalTimer","clearedInterval","newTime","timerFinished","setState","length","clearInterval","this","splice","onWorkoutFinished","rest","intensityValue","light","medium","high","Math","round","index","paused","showingCountdown","React","NextWorkout","Workout","workouts","getWorkouts","handleClick","handleWorkoutFinished","nextWorkout","require","tempWorkouts","randomizeWorkouts","i","j","floor","random","temp","slice","calculateTimeInterval","Object","keys","values","onClick","App","e","target","path","component","event","handleTimeChange","handleTypeChange","handleIntensityChange","from","exact","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f72b6f5c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport interface WorkoutSelectorProps {\n  onTimeChange: any;\n  onTypeChange: any;\n  onIntensityChange: any;\n  time: number;\n  type: string;\n  intensity: string;\n}\n\nconst WorkoutSelector: React.SFC<WorkoutSelectorProps> = (props) => {\n  return (\n    <>\n      {/* <h1 id=\"workout\">Workout Selector</h1> */}\n      <div className=\"selection\">\n        <h1>I have </h1>\n        <select value={props.time} onChange={props.onTimeChange}>\n          <option value={4}>4</option>\n          <option value={6}>6</option>\n          <option value={10}>10</option>\n          <option value={14}>14</option>\n          <option value={20}>20</option>\n          <option value={24}>24</option>\n          <option value={30}>30</option>\n        </select>\n        <h1>Minutes</h1>\n      </div>\n\n      <div className=\"selection\">\n        <h1>To focus on </h1>\n        <select\n          value={props.type}\n          onChange={props.onTypeChange}\n          name=\"area\"\n          id=\"selectArea\"\n        >\n          <option value=\"upper\">Upper body</option>\n          <option value=\"core\">Core</option>\n          <option value=\"lower\">Lower body</option>\n          <option value=\"full\">Full body</option>\n        </select>\n      </div>\n\n      <div className=\"selection\">\n        <h1>With </h1>\n        <select\n          value={props.intensity}\n          onChange={props.onIntensityChange}\n          name=\"intensity\"\n          id=\"selectIntensity\"\n        >\n          <option value=\"light\">Light</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"high\">High</option>\n        </select>\n        <h1>intensity</h1>\n      </div>\n\n      <Link className=\"btn btn-link\" to=\"/workout\">\n        <h2>GO</h2>\n      </Link>\n\n      <div id=\"flatIcons\">\n        Icons made by{\" \"}\n        <a\n          href=\"https://www.flaticon.com/authors/ultimatearm\"\n          title=\"ultimatearm\"\n        >\n          ultimatearm\n        </a>{\" \"}\n        from{\" \"}\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n          www.flaticon.com\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default WorkoutSelector;\n","import * as React from \"react\";\n\nexport interface CurrentWorkoutProps {\n  workout: String;\n  svgPath: any;\n}\n\nconst CurrentWorkout: React.SFC<CurrentWorkoutProps> = (props) => {\n  const { workout, svgPath } = props;\n\n  return (\n    <div className=\"currentWorkout\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        id=\"outline\"\n        viewBox=\"0 0 512 512\"\n        width=\"256\"\n        height=\"256\"\n        fill=\"#006ec2\"\n      >\n        <path d={svgPath} />\n      </svg>\n      <h1>{workout.toUpperCase()}</h1>\n    </div>\n  );\n};\n\nexport default CurrentWorkout;\n","import * as React from \"react\";\n\nexport interface WorkoutItemProps {\n  type: String;\n  time: Number;\n  active: boolean;\n}\n\nconst WorkoutItem: React.SFC<WorkoutItemProps> = (props) => {\n  return (\n    <h2 className={props.active ? \"workoutItem\" : \"workoutItem inactive\"}>\n      {props.type}\n      <span className=\"workoutItemTimer\">{props.time}</span>\n    </h2>\n  );\n};\n\nexport default WorkoutItem;\n","import * as React from \"react\";\nimport WorkoutItem from \"./common/workoutItem\";\n\nexport interface WorkoutListProps {\n  time: number;\n  onWorkoutFinished: any;\n  paused: boolean;\n  intensity: string;\n}\n\nexport interface WorkoutListState {\n  currentTimer: number;\n}\n\nclass WorkoutList extends React.Component<WorkoutListProps, WorkoutListState> {\n  state = {\n    currentTimer: this.calculateTimers(false),\n  };\n\n  timers: Array<number> = [0, 1, 2, 3, 4, 5];\n  currentTimers: Array<number> = [...this.timers];\n\n  intervalTimer = setInterval(() => {\n    this.calculateIntervalTimer();\n  }, 1000);\n\n  clearedInterval = false;\n\n  componentWillUnmount() {\n    clearInterval(this.intervalTimer);\n  }\n\n  timerFinished(): void {\n    this.currentTimers.splice(0, 1);\n    if (this.currentTimers.length === 0) {\n      this.props.onWorkoutFinished();\n      this.currentTimers = [...this.timers];\n    }\n  }\n\n  calculateTimers(rest: boolean): number {\n    let time = this.props.time / 6;\n    const intensity = {\n      light: -0.2,\n      medium: 0.2,\n      high: 0.8,\n    };\n    let intensityValue = intensity[this.props.intensity];\n\n    if (!rest) {\n      time += Math.round(time * intensityValue);\n    } else {\n      time -= Math.round(time * intensityValue);\n    }\n    return time;\n  }\n\n  showingCountdown(rest: boolean, index: number): number {\n    return this.currentTimers[0] === index\n      ? this.state.currentTimer\n      : this.currentTimers[0] < index\n      ? this.calculateTimers(rest)\n      : 0;\n  }\n\n  calculateIntervalTimer = () => {\n    let newTime = this.state.currentTimer;\n    newTime--;\n    if (newTime <= 0) {\n      this.timerFinished();\n      this.setState({\n        currentTimer: this.calculateTimers(this.currentTimers.length % 2 !== 0),\n      });\n      return;\n    }\n    this.setState({ currentTimer: newTime });\n  };\n\n  render() {\n    if (this.props.paused) {\n      clearInterval(this.intervalTimer);\n      this.clearedInterval = true;\n    } else if (!this.props.paused && this.clearedInterval) {\n      this.clearedInterval = false;\n      this.intervalTimer = setInterval(() => {\n        this.calculateIntervalTimer();\n      }, 1000);\n    }\n\n    return (\n      <div className=\"workoutList\">\n        <WorkoutItem\n          type=\"workout\"\n          active={this.currentTimers[0] <= 0}\n          time={this.currentTimers[0] === 0 ? this.state.currentTimer : 0}\n        />\n        <WorkoutItem\n          type=\"break\"\n          active={this.currentTimers[0] <= 1}\n          time={this.showingCountdown(true, 1)}\n        />\n        <WorkoutItem\n          type=\"workout\"\n          active={this.currentTimers[0] <= 2}\n          time={this.showingCountdown(false, 2)}\n        />\n        <WorkoutItem\n          type=\"break\"\n          active={this.currentTimers[0] <= 3}\n          time={this.showingCountdown(true, 3)}\n        />\n        <WorkoutItem\n          type=\"workout\"\n          active={this.currentTimers[0] <= 4}\n          time={this.showingCountdown(false, 4)}\n        />\n        <WorkoutItem\n          type=\"break\"\n          active={this.currentTimers[0] <= 5}\n          time={this.showingCountdown(true, 5)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default WorkoutList;\n","import * as React from \"react\";\n\nexport interface NextWorkoutProps {\n  workout: string;\n}\n\nconst NextWorkout: React.SFC<NextWorkoutProps> = (props) => {\n  return (\n    <div className=\"nextWorkout\">\n      <p>Next workout</p>\n      <h2>{props.workout}</h2>\n    </div>\n  );\n};\n\nexport default NextWorkout;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CurrentWorkout from \"./common/currentWorkout\";\nimport WorkoutList from \"./workoutList\";\nimport NextWorkout from \"./common/nextWorkout\";\n\nexport interface WorkoutProps {\n  type: string;\n  time: number;\n  intensity: string;\n}\n\nexport interface WorkoutState {\n  workout: object;\n  nextWorkout: object;\n  paused: boolean;\n}\n\nclass Workout extends React.Component<WorkoutProps, WorkoutState> {\n  workouts: Array<object> = this.getWorkouts();\n\n  componentWillMount() {\n    const workout = this.workouts[0];\n    const nextWorkout = this.workouts[1];\n    this.setState({ workout, nextWorkout });\n  }\n\n  getWorkouts(): Array<Object> {\n    let workouts = require(\"../workouts.json\");\n    if (this.props.type === \"full\") {\n      let tempWorkouts: Array<Object> = [];\n      for (let workout in workouts) {\n        tempWorkouts = [...tempWorkouts, ...workouts[workout]];\n      }\n      workouts = tempWorkouts;\n    } else {\n      workouts = workouts[this.props.type];\n    }\n    workouts = this.randomizeWorkouts(workouts);\n    return workouts;\n  }\n\n  calculateTimeInterval(time: number): number {\n    let workoutTime = time / 4;\n    return workoutTime;\n  }\n\n  randomizeWorkouts(workouts: Array<Object>): Array<Object> {\n    for (let i = workouts.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n\n      let temp = workouts[i];\n      workouts[i] = workouts[j];\n      workouts[j] = temp;\n    }\n\n    // I'm only returning the first four since we only want 4 workouts always.\n    return workouts.slice(0, 4);\n  }\n\n  handleClick = () => {\n    let paused = !this.state.paused;\n    this.setState({ paused });\n  };\n\n  handleWorkoutFinished = () => {\n    this.workouts.splice(0, 1);\n    let workout = this.state.nextWorkout;\n    let nextWorkout = this.workouts[1]\n      ? this.workouts[1]\n      : { \"Last workout!\": \"\" };\n    if (this.workouts.length === 0) {\n      workout = { \"All done!\": \"\" };\n      this.setState({ paused: true });\n    }\n    this.setState({ workout, nextWorkout });\n  };\n\n  render() {\n    const { workout, nextWorkout, paused } = this.state;\n    const time = this.calculateTimeInterval(this.props.time * 60);\n\n    return (\n      <div className=\"workout\">\n        <CurrentWorkout\n          workout={Object.keys(workout)[0]}\n          svgPath={Object.values(workout)[0]}\n        />\n        <NextWorkout workout={Object.keys(nextWorkout)[0]} />\n        <WorkoutList\n          intensity={this.props.intensity}\n          paused={paused}\n          time={time}\n          onWorkoutFinished={this.handleWorkoutFinished}\n        />\n        <Link className=\"btn btn-link\" to=\"/select\">\n          <h2>Back</h2>\n        </Link>\n        <button className=\"btn btn-button\" onClick={this.handleClick}>\n          {this.state.paused ? \"Go\" : \"Pause\"}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Workout;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport WorkoutSelector from \"./components/workoutSelector\";\nimport Workout from \"./components/workout\";\nimport \"./App.css\";\n\nexport interface AppProps {}\n\nexport interface AppState {\n  time: number;\n  type: string;\n  intensity: string;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  state = {\n    time: 4,\n    type: \"core\",\n    intensity: \"light\",\n  };\n\n  handleTimeChange(e: any) {\n    const time: number = e.target.value;\n    this.setState({ time });\n  }\n\n  handleTypeChange(e: any) {\n    const type: string = e.target.value;\n    this.setState({ type });\n  }\n\n  handleIntensityChange(e: any) {\n    const intensity: string = e.target.value;\n    this.setState({ intensity });\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <h1 className=\"title\">WORKOUT</h1>\n        <Switch>\n          <Route\n            path=\"/workout\"\n            component={() => (\n              <Workout\n                time={this.state.time}\n                type={this.state.type}\n                intensity={this.state.intensity}\n              />\n            )}\n          />\n          <Route\n            path=\"/select\"\n            component={() => (\n              <WorkoutSelector\n                onTimeChange={(event) => this.handleTimeChange(event)}\n                onTypeChange={(event) => this.handleTypeChange(event)}\n                onIntensityChange={(event) => this.handleIntensityChange(event)}\n                time={this.state.time}\n                type={this.state.type}\n                intensity={this.state.intensity}\n              />\n            )}\n          />\n          <Redirect from=\"/\" exact to=\"/select\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./style/main.scss\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}